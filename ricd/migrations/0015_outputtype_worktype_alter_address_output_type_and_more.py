# Generated by Django 5.2.6 on 2025-09-09 06:36

import django.db.models.deletion
from django.db import migrations, models


# Removed create_work_output_types function - using raw SQL instead


def migrate_existing_data(apps, schema_editor):
    """Migrate existing Address and Work data to use foreign keys using raw SQL"""
    # Use raw SQL to avoid Django field access issues during migration
    db_alias = schema_editor.connection.alias

    # Migrate address work_type and output_type
    schema_editor.execute("""
        UPDATE ricd_address
        SET output_type_id = (
            SELECT id FROM ricd_outputtype WHERE code = ricd_address.output_type
        )
        WHERE output_type IS NOT NULL AND output_type_id IS NULL
    """)

    schema_editor.execute("""
        UPDATE ricd_address
        SET work_type_id = (
            SELECT id FROM ricd_worktype WHERE code = ricd_address.work_type
        )
        WHERE work_type IS NOT NULL AND work_type_id IS NULL
    """)

    # Migrate work work_type and output_type
    schema_editor.execute("""
        UPDATE ricd_work
        SET output_type_id = (
            SELECT id FROM ricd_outputtype WHERE code = ricd_work.output_type
        )
        WHERE output_type IS NOT NULL AND output_type_id IS NULL
    """)

    schema_editor.execute("""
        UPDATE ricd_work
        SET work_type_id = (
            SELECT id FROM ricd_worktype WHERE code = ricd_work.work_type
        )
        WHERE work_type IS NOT NULL AND work_type_id IS NULL
    """)


class Migration(migrations.Migration):

    dependencies = [
        ('ricd', '0014_alter_address_options_address_bedrooms_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OutputType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Internal code for output type', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Display name for output type', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Internal code for work type', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Display name for work type', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.RunSQL(
            # Create work types and output types using raw SQL to avoid Django's caching
            """
            INSERT OR IGNORE INTO ricd_worktype (code, name, is_active)
            VALUES
                ('construction', 'Construction', 1),
                ('land_lot_development', 'Land Lot Development', 1),
                ('demolition', 'Demolition', 1),
                ('extension', 'Extension', 1),
                ('other', 'Other', 1);
            """),
        migrations.RunSQL(
            """
            INSERT OR IGNORE INTO ricd_outputtype (code, name, is_active)
            VALUES
                ('detached_house', 'Detached House', 1),
                ('unit', 'Self-contained Unit', 1),
                ('duplex', 'Duplex', 1),
                ('triplex', 'Triplex', 1),
                ('townhouse', 'Townhouse', 1),
                ('extension', 'Extension', 1),
                ('cluster_house', 'Cluster House', 1),
                ('consultancy', 'Consultancy', 1),
                ('other_expenses', 'Other Expenses', 1);
            """),
        # Add the foreign key columns first
        migrations.AddField(
            model_name='address',
            name='output_type_id',
            field=models.IntegerField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='work',
            name='output_type_id',
            field=models.IntegerField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='address',
            name='work_type_id',
            field=models.IntegerField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='work',
            name='work_type_id',
            field=models.IntegerField(null=True, blank=True),
        ),
        migrations.RunPython(migrate_existing_data, migrations.RunPython.noop),
        # Now create the foreign key constraints
        migrations.AlterField(
            model_name='address',
            name='output_type_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ricd.outputtype'),
        ),
        migrations.AlterField(
            model_name='work',
            name='output_type_id',
            field=models.ForeignKey(null=False, on_delete=django.db.models.deletion.PROTECT, to='ricd.outputtype'),
        ),
        migrations.AlterField(
            model_name='address',
            name='work_type_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ricd.worktype'),
        ),
        migrations.AlterField(
            model_name='work',
            name='work_type_id',
            field=models.ForeignKey(null=False, on_delete=django.db.models.deletion.PROTECT, to='ricd.worktype'),
        ),
        # Clean up the old string columns
        migrations.RemoveField(
            model_name='address',
            name='output_type',
        ),
        migrations.RemoveField(
            model_name='work',
            name='output_type',
        ),
        migrations.RemoveField(
            model_name='address',
            name='work_type',
        ),
        migrations.RemoveField(
            model_name='work',
            name='work_type',
        ),
    ]
